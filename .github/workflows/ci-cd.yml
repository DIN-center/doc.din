---
name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  # All checks run in parallel
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Build
        uses: ConsenSys/github-actions/docs-build@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  lint:
    name: Lint Code Base, Spelling
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Lint code
        uses: ConsenSys/github-actions/docs-lint-all@main

      - name: Lint markdown
        uses: ConsenSys/github-actions/docs-lint-markdown@main

  link-check:
    name: Link Checking
    runs-on: ubuntu-latest
    strategy:
      matrix:
        file-extensions: [".md", ".mdx"]
    steps:
      - uses: actions/checkout@v4

      - name: LinkCheck
        uses: ConsenSys/github-actions/docs-link-check@main
        with:
          FILE_EXTENSION: ${{ matrix.file-extensions }}

  spelling:
    name: Spelling
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Vale
        uses: Consensys/github-actions/docs-spelling-check@main
        with:
          FILEPATHS: "docs"

  case-check:
    name: Check for case being inconsistent
    runs-on: ubuntu-latest
    strategy:
      matrix:
        folder: ["docs"]
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Case check action
        uses: ConsenSys/github-actions/docs-case-check@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOC_DIR: ${{ matrix.folder }}
          SKIP_TEST: true

  # Preview deployment for PRs - runs after all checks pass
  preview-deploy:
    name: Deploy Preview to Vercel
    if: github.event_name == 'pull_request'
    needs: [build, lint, link-check, spelling, case-check]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Copy vercel.json to build
        run: cp vercel.json ./build

      - name: Deploy to Vercel (Preview)
        uses: amondnet/vercel-action@v25
        id: vercel-preview
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./build
          github-comment: true

  # Production deployment - only runs on push to main after all checks pass
  production-deploy:
    name: Deploy Production to Vercel
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [build, lint, link-check, spelling, case-check]
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Copy vercel.json to build
        run: cp vercel.json ./build

      - name: Deploy to Vercel (Production)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: ./build

  # Semantic release - runs after production deploy
  release:
    name: Create Release
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: production-deploy
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4

      - name: Release
        uses: Consensys/github-actions/docs-release@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SEMANTIC_RELEASE: true
